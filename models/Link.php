<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "link".
 *
 * @property int $id
 * @property string $url
 * @property string $short_url
 *
 * @property Visit[] $visits
 */
class Link extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'link';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['url', 'short_url'], 'required'],
            [['url', 'short_url'], 'string'],
            ['url', 'url', 'defaultScheme' => 'http'],
            ['url', 'validateUrlAvailability'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'url' => 'Url',
            'short_url' => 'Short Url',
        ];
    }

    /**
     * Gets query for [[Visits]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function validateUrlAvailability($attribute, $params)
    {
        $ch = curl_init($this->$attribute);
        curl_setopt($ch, CURLOPT_NOBODY, true);
        curl_setopt($ch, CURLOPT_TIMEOUT, 5);
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);
        if ($httpCode < 200 || $httpCode >= 400) {
            $this->addError($attribute, 'Данный URL не доступен');
        }
    }
    protected function generateShortUrl($length = 6)
    {
        $chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
        $short = '';
        for ($i = 0; $i < $length; $i++) {
            $short .= $chars[random_int(0, strlen($chars) - 1)];
        }
        return $short;
    }
    public function getVisits()
    {
        return $this->hasMany(Visit::class, ['link_id' => 'id']);
    }
    public function beforeValidate()
    {
        $this->short_url = $this->generateShortUrl();
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }
}